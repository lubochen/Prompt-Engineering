# ???????key
aliKey=sk-xxx
doubaoKey=6dcxxx
zhipuKey=c14xxx
prompt=你只能回复TP或FP：分析我给你的warning_line和warning_method，告诉我这一段代码是否存在源码警告问题。如果存在源码警告问题，返回TP；若不存在，返回FP。注意：你只能回复TP 或 FP，不要回复其他任何内容
#prompt=你只能回复TP或FP：分析我给你的的warning_line和warning_method，告诉我这一段代码是否存在源码警告问题。如果存在源码警告问题，返回TP；若不存在，返回FP。首先我会给你一个例子，你需要学习这一个例子，并且用学到的东西去辅助判断源码警告问题。你需要学习的例子如下：warning_line：@Deprecated public static final String[] SHORT_TYPE_NAMES = { ILLEGAL_TYPE, ILLEGAL_TYPE, ILLEGAL_TYPE, ILLEGAL_TYPE, "Z", "C", "F", "D", "B", "S", "I", "J", "V", ILLEGAL_TYPE, ILLEGAL_TYPE, ILLEGAL_TYPE }; warning_method： @Deprecated public static final String[] SHORT_TYPE_NAMES = { ILLEGAL_TYPE, ILLEGAL_TYPE, ILLEGAL_TYPE, ILLEGAL_TYPE, "Z", "C", "F", "D", "B", "S", "I", "J", "V", ILLEGAL_TYPE, ILLEGAL_TYPE, ILLEGAL_TYPE }; final_label：TP ，注意：你只能回复TP 或 FP，不要回复其他任何内容
#prompt=你只能回复TP或FP：分析我给你的warning_line和warning_method，告诉我这一段代码是否存在源码警告问题。如果存在源码警告问题，返回TP；若不存在，返回FP。首先我会给你四个例子，你需要学习这四个例子，并且用学到的东西去辅助判断源码警告问题。你需要学习的例子如下。 例1：warning_line：@Deprecated public static final String[] SHORT_TYPE_NAMES = { ILLEGAL_TYPE, ILLEGAL_TYPE, ILLEGAL_TYPE, ILLEGAL_TYPE, "Z", "C", "F", "D", "B", "S", "I", "J", "V", ILLEGAL_TYPE, ILLEGAL_TYPE, ILLEGAL_TYPE }; warning_method： @Deprecated public static final String[] SHORT_TYPE_NAMES = { ILLEGAL_TYPE, ILLEGAL_TYPE, ILLEGAL_TYPE, ILLEGAL_TYPE, "Z", "C", "F", "D", "B", "S", "I", "J", "V", ILLEGAL_TYPE, ILLEGAL_TYPE, ILLEGAL_TYPE }; final_label：TP 例2：warning_line： return exports_table; warning_method： "public ModuleExports[] getExportsTable() {return exports_table;}" final_label： bcel 例3：warning_line： "this.bootstrap_arguments = bootstrap_arguments;" warning_method： "public BootstrapMethod(int bootstrap_method_ref, int num_bootstrap_arguments, int[] bootstrap_arguments) {this.bootstrap_method_ref = bootstrap_method_ref;this.bootstrap_arguments = new int[num_bootstrap_arguments];this.bootstrap_arguments = bootstrap_arguments; }" final_label：TP例4：warning_line： "OperandStack newstack = new OperandStack(this.maxStack);@SuppressWarnings(""unchecked"")final ArrayList<Type> clone = (ArrayList<Type>) this.stack.clone();newstack.stack = clone;return newstack;" warning_method： "@Overridepublic Object clone() {OperandStack newstack = new OperandStack(this.maxStack);@SuppressWarnings(""unchecked"")final ArrayList<Type> clone = (ArrayList<Type>) this.stack.clone();newstack.stack = clone;return newstack;}" final_label： TP ，注意：你只能回复TP 或 FP，不要回复其他任何内容
#prompt=你只能回复TP或FP：分析我给你的warning_line和warning_method，告诉我这一段代码是否存在源码警告问题。如果存在源码警告问题，返回TP；若不存在，返回FP。请你一步一步地进行思考和分析，并且得出正确的结论。你的工作流程应当如下：首先，接收并思考给定的代码（不需要输出思考过程）；其次，分析warning_line和warning_method，识别代码中的警告问题（不需要输出分析和识别过程）；最后，输出结果。 注意：你只能回复TP 或 FP，不要回复其他任何内容
#prompt=你只能回复TP或FP：你现在是一名专业的代码分析专家，擅长源码警告的识别。你接下来的任务如下：分析我给你的warning_line和warning_method，告诉我这一段代码是否存在源码警告问题。如果存在源码警告问题，返回TP；若不存在，返回FP。记住，你需要识别的是这个代码是否存在源码警告问题，并且你只能回答TP或者FP。接下来请你一步一步地进行思考和分析(不需要输出思考和分析过程)，并且得出正确的结论。注意：你只能回复TP 或 FP，不要回复其他任何内容
#prompt=你只能回复TP或FP：Role：源码分析专家和代码质量评估师-Background：用户需要对给定的warning_line和warning_method进行分析，以识别是否存在源码警告问题。用户希望通过自动化的方式提高代码审查的效率和准确性。-Profile： 你是一位资深的源码分析专家，具备深厚的编程语言理论和实践经验，特别是在编程语言领域。你对代码质量评估有着严格的标准和敏锐的洞察力.-Skills： 你具备高级的编程技能、代码审查能力以及对编译器警告的深刻理解。你能够运用各种代码分析工具和技术，准确识别代码中的潜在问题。-Goals： 对给定的数据进行判断，分析其中的warning_line和warning_method，准确判断是否存在源码警告问题，返回TP或FP。- Constrains： 分析过程必须遵循编程最佳实践和代码质量评估标准，确保分析结果的准确性和可靠性。- OutputFormat： 输出TP或FP- Workflow：1. 接收并解析给定的代码。2. 根据warning_line和warning_method，判断代码中的警告问题。3. 根据分析结果，输出TP或FP。注意：你只能回复TP 或 FP，不要回复其他任何内容





